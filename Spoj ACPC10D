#include<bits/stdc++.h>
using namespace std;

long long dp[100005][3],arr[100005][3];
long long i,n,j;

void solve(){
	
	for(i=0;i<n;i++){
        for(j=0;j<3;j++){
            dp[i][j]=INT_MAX;
        }
    }
	
 for(i=0;i<3;i++) dp[0][i]=arr[0][i];

   dp[1][0]=arr[0][1]+arr[1][0];
   dp[1][1]=min((arr[0][1]+arr[1][1]),(arr[0][1]+arr[0][2]+arr[1][1]));
   dp[1][2]=min((arr[0][1]+arr[1][2]),(arr[0][1]+arr[0][2]+arr[1][2]));

    for(i=1;i<n;i++){
        for(j=0;j<3;j++){
            if(j==0){
                dp[i][j+1]=min(dp[i][j+1],dp[i][j]+arr[i][j+1]);
                dp[i+1][j+1]=min(dp[i+1][j+1],dp[i][j]+arr[i+1][j+1]);
                dp[i+1][j]=min(dp[i+1][j],dp[i][j]+arr[i+1][j]);
            }
            else if(j==1){
                dp[i+1][j-1]=min(dp[i+1][j-1],dp[i][j]+arr[i+1][j-1]);
                dp[i+1][j]=min(dp[i+1][j],dp[i][j]+arr[i+1][j]);
                dp[i+1][j+1]=min(dp[i+1][j+1],dp[i][j]+arr[i+1][j+1]);
                dp[i][j+1]=min(dp[i][j+1],dp[i][j]+arr[i][j+1]);
            }
            else{
                dp[i+1][j-1]=min(dp[i+1][j-1],dp[i][j]+arr[i+1][j-1]);
                dp[i+1][j]=min(dp[i+1][j],dp[i][j]+arr[i+1][j]);
            }
        }
    }
	
	cout<<dp[n-1][1]<<"\n";
	
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);    long long idx=0;
	cin>>n;
	while(n!=0){   idx+=1;
		for(i=0;i<n;i++)    
		cin>>arr[i][0]>>arr[i][1]>>arr[i][2];
		cout<<idx<<". ";
		solve();
		cin>>n;
	}
}
